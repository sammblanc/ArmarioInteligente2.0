# Docker Compose para desenvolvimento
version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: armario-inteligente-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: armariointeligente_dev
      POSTGRES_USER: armariointeligente
      POSTGRES_PASSWORD: armario123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - armario-network-dev

  # Aplicação Spring Boot para desenvolvimento
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: armario-inteligente-app-dev
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/armariointeligente_dev
      SPRING_DATASOURCE_USERNAME: armariointeligente
      SPRING_DATASOURCE_PASSWORD: armario123
      JWT_SECRET: armariointeligenteSecretKey2023@Unit#TokSeg$SystemSecureJwtToken
      JWT_EXPIRATION: 86400000
      SPRING_DEVTOOLS_RESTART_ENABLED: true
    ports:
      - "8081:8080"
    volumes:
      - .:/app
      - maven_cache:/root/.m2
    networks:
      - armario-network-dev

  # pgAdmin para desenvolvimento
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: armario-inteligente-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@armariointeligente.com
      PGADMIN_DEFAULT_PASSWORD: dev123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5051:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - armario-network-dev
    depends_on:
      - postgres

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  maven_cache:
    driver: local

networks:
  armario-network-dev:
    driver: bridge
