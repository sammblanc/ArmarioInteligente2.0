# Configurações para ambiente Docker
spring.application.name=armariointeligente
server.port=8080

# Configurações do PostgreSQL para Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/armariointeligente}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:armariointeligente}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:armario123}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate para PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Desabilitar console H2 em Docker
spring.h2.console.enabled=false

# Configurações do HikariCP para Docker
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED

# Configurações de logging para Docker
logging.level.org.springframework=INFO
logging.level.br.com.unit.tokseg=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.file.name=/app/logs/armario-inteligente.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB

# JWT Configuration
jwt.secret=${JWT_SECRET:armariointeligenteSecretKey2023@Unit#TokSeg$SystemSecureJwtToken}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Swagger/OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Actuator para healthcheck
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true
